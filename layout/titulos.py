import streamlit as st
import pandas as pd
import plotly.express as px
from io import BytesIO

# ===========================
# CONFIGURA√á√ïES INICIAIS
# ===========================
st.set_page_config(
    page_title="Painel de Contrata√ß√£o - Munic√≠pios",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title("üèôÔ∏è Painel Interativo de Contrata√ß√£o por Munic√≠pio")
st.markdown(
    """
    Este painel apresenta dados consolidados dos processos de contrata√ß√£o de diferentes munic√≠pios,
    permitindo compara√ß√µes entre disciplinas e indicadores.
    """
)

# ===========================
# FUN√á√ÉO PARA CARREGAR PLANILHAS
# ===========================
@st.cache_data
def carregar_planilhas(municipio, arquivo):
    # Abas que devem ser ignoradas
    abas_excluir = ["AUX", "INDICE", "LOG", "CHAMADA", "Configura√ß√£o de Email"]

    xls = pd.ExcelFile(arquivo)
    dados_municipio = []

    for aba in xls.sheet_names:
        if aba.upper() not in [a.upper() for a in abas_excluir]:
            df = pd.read_excel(xls, sheet_name=aba)
            df["Disciplina"] = aba
            df["Munic√≠pio"] = municipio
            dados_municipio.append(df)

    if dados_municipio:
        df_municipio = pd.concat(dados_municipio, ignore_index=True)
        # Excluir colunas desnecess√°rias, se existirem
        colunas_excluir = ["Ampla Concorr√™ncia", "Negros", "Deficientes", "Ind√≠genas"]
        df_municipio = df_municipio.drop(columns=[c for c in colunas_excluir if c in df_municipio.columns], errors="ignore")
        return df_municipio
    else:
        return pd.DataFrame()

# ===========================
# UPLOAD DOS ARQUIVOS (4 MUNIC√çPIOS)
# ===========================
st.sidebar.header("üìÇ Carregue os arquivos de cada munic√≠pio")

arquivos = {}
municipios = ["Vit√≥ria", "Serra", "Santa Teresa", "Fund√£o"]

for municipio in municipios:
    arquivos[municipio] = st.sidebar.file_uploader(f"üìò {municipio}", type=["xlsx"])

# ===========================
# PROCESSAR DADOS
# ===========================
dfs = []
for municipio, arquivo in arquivos.items():
    if arquivo is not None:
        df_mun = carregar_planilhas(municipio, arquivo)
        if not df_mun.empty:
            dfs.append(df_mun)

if dfs:
    df_total = pd.concat(dfs, ignore_index=True)
    st.success("‚úÖ Dados carregados com sucesso para os munic√≠pios selecionados.")
else:
    st.warning("Envie ao menos um arquivo Excel para come√ßar a an√°lise.")
    st.stop()

# ===========================
# ABA 1 - VIS√ÉO GERAL
# ===========================
aba1, aba2 = st.tabs(["üìà Vis√£o Comparativa", "ü•ß Gr√°ficos por Disciplina"])

# ---------------------------
# ABA 1: GR√ÅFICO DE BARRAS COMPARATIVO
# ---------------------------
with aba1:
    st.subheader("üìä Comparativo entre Munic√≠pios por Disciplina")

    # Verifica se existe a coluna "Total de Candidatos" ou similar
    colunas_qtd = [c for c in df_total.columns if "Total" in c or "total" in c or "Quantidade" in c]

    if colunas_qtd:


